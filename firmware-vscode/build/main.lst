ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB44:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "modulator.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  45:Core/Src/main.c **** TIM_HandleTypeDef htim21;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** // uint8_t transmit_buffer [10];
  48:Core/Src/main.c **** // struct CircularBuffer tx_buffer_manager;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** Mod_Info modulator;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_TIM2_Init(void);
  59:Core/Src/main.c **** static void MX_TIM21_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Configure the system clock */
  89:Core/Src/main.c ****   SystemClock_Config();
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_TIM2_Init();
  98:Core/Src/main.c ****   MX_TIM21_Init();
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** 	HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 102:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim2);
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   // Init modulator
 105:Core/Src/main.c ****   init();
 106:Core/Src/main.c **** 	
 107:Core/Src/main.c **** 	// Default byte to be transmitted is 0x00
 108:Core/Src/main.c **** 	modulator.data_byte = 0x0B;
 109:Core/Src/main.c **** 	modulator.periods_between_bytes = 5;
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   // init_buffer(&tx_buffer_manager, transmit_buffer, sizeof(transmit_buffer));
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     /* USER CODE END WHILE */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     tx_byte(0x55);
 124:Core/Src/main.c ****     tx_byte(0x77);
 125:Core/Src/main.c ****     tx_byte(0x00);
 126:Core/Src/main.c ****     HAL_Delay(50);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     // tx_byte(0x0B);
 129:Core/Src/main.c ****     // HAL_Delay(100);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 4


 148:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 151:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 153:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_4;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     Error_Handler();
 158:Core/Src/main.c ****   }
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 176:Core/Src/main.c ****   * @param None
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** static void MX_TIM2_Init(void)
 180:Core/Src/main.c **** {
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 187:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 192:Core/Src/main.c ****   htim2.Instance = TIM2;
 193:Core/Src/main.c ****   htim2.Init.Prescaler = 1;
 194:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 195:Core/Src/main.c ****   htim2.Init.Period = 511;
 196:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 197:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 198:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 203:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 204:Core/Src/main.c ****   {
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 5


 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 208:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 209:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     Error_Handler();
 212:Core/Src/main.c ****   }
 213:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /**
 220:Core/Src/main.c ****   * @brief TIM21 Initialization Function
 221:Core/Src/main.c ****   * @param None
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** static void MX_TIM21_Init(void)
 225:Core/Src/main.c **** {
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE BEGIN TIM21_Init 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END TIM21_Init 0 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 232:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 233:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE BEGIN TIM21_Init 1 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END TIM21_Init 1 */
 238:Core/Src/main.c ****   htim21.Instance = TIM21;
 239:Core/Src/main.c ****   htim21.Init.Prescaler = 0;
 240:Core/Src/main.c ****   htim21.Init.CounterMode = TIM_COUNTERMODE_UP;
 241:Core/Src/main.c ****   htim21.Init.Period = 1;
 242:Core/Src/main.c ****   htim21.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 243:Core/Src/main.c ****   htim21.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 244:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim21) != HAL_OK)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 249:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim21, &sClockSourceConfig) != HAL_OK)
 250:Core/Src/main.c ****   {
 251:Core/Src/main.c ****     Error_Handler();
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim21) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 258:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 259:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim21, &sMasterConfig) != HAL_OK)
 260:Core/Src/main.c ****   {
 261:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 6


 262:Core/Src/main.c ****   }
 263:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 264:Core/Src/main.c ****   sConfigOC.Pulse = 1;
 265:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 266:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 267:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim21, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c ****   /* USER CODE BEGIN TIM21_Init 2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END TIM21_Init 2 */
 274:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim21);
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****   * @brief GPIO Initialization Function
 280:Core/Src/main.c ****   * @param None
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** static void MX_GPIO_Init(void)
 284:Core/Src/main.c **** {
  26              		.loc 1 284 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 48
 285:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 285 3 view .LVU1
  39              		.loc 1 285 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 288:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 288 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 288 3 view .LVU4
  48              		.loc 1 288 3 view .LVU5
  49 000e 114B     		ldr	r3, .L2
  50 0010 DA6A     		ldr	r2, [r3, #44]
  51 0012 0225     		movs	r5, #2
  52 0014 2A43     		orrs	r2, r5
  53 0016 DA62     		str	r2, [r3, #44]
  54              		.loc 1 288 3 view .LVU6
  55 0018 DA6A     		ldr	r2, [r3, #44]
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 7


  56 001a 2A40     		ands	r2, r5
  57 001c 0192     		str	r2, [sp, #4]
  58              		.loc 1 288 3 view .LVU7
  59 001e 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 288 3 view .LVU8
 289:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 289 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 289 3 view .LVU10
  65              		.loc 1 289 3 view .LVU11
  66 0020 DA6A     		ldr	r2, [r3, #44]
  67 0022 0124     		movs	r4, #1
  68 0024 2243     		orrs	r2, r4
  69 0026 DA62     		str	r2, [r3, #44]
  70              		.loc 1 289 3 view .LVU12
  71 0028 DB6A     		ldr	r3, [r3, #44]
  72 002a 2340     		ands	r3, r4
  73 002c 0293     		str	r3, [sp, #8]
  74              		.loc 1 289 3 view .LVU13
  75 002e 029B     		ldr	r3, [sp, #8]
  76              	.LBE5:
  77              		.loc 1 289 3 view .LVU14
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 292:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  78              		.loc 1 292 3 view .LVU15
  79 0030 094E     		ldr	r6, .L2+4
  80 0032 0022     		movs	r2, #0
  81 0034 0221     		movs	r1, #2
  82 0036 3000     		movs	r0, r6
  83 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL1:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 295:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
  85              		.loc 1 295 3 view .LVU16
  86              		.loc 1 295 23 is_stmt 0 view .LVU17
  87 003c 0395     		str	r5, [sp, #12]
 296:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 296 3 is_stmt 1 view .LVU18
  89              		.loc 1 296 24 is_stmt 0 view .LVU19
  90 003e 0494     		str	r4, [sp, #16]
 297:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  91              		.loc 1 297 3 is_stmt 1 view .LVU20
  92              		.loc 1 297 24 is_stmt 0 view .LVU21
  93 0040 0023     		movs	r3, #0
  94 0042 0593     		str	r3, [sp, #20]
 298:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  95              		.loc 1 298 3 is_stmt 1 view .LVU22
  96              		.loc 1 298 25 is_stmt 0 view .LVU23
  97 0044 0693     		str	r3, [sp, #24]
 299:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
  98              		.loc 1 299 3 is_stmt 1 view .LVU24
  99 0046 03A9     		add	r1, sp, #12
 100 0048 3000     		movs	r0, r6
 101 004a FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 8


 102              	.LVL2:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** }
 103              		.loc 1 301 1 is_stmt 0 view .LVU25
 104 004e 08B0     		add	sp, sp, #32
 105              		@ sp needed
 106 0050 70BD     		pop	{r4, r5, r6, pc}
 107              	.L3:
 108 0052 C046     		.align	2
 109              	.L2:
 110 0054 00100240 		.word	1073876992
 111 0058 00040050 		.word	1342178304
 112              		.cfi_endproc
 113              	.LFE44:
 115              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 116              		.align	1
 117              		.global	HAL_TIM_PeriodElapsedCallback
 118              		.syntax unified
 119              		.code	16
 120              		.thumb_func
 122              	HAL_TIM_PeriodElapsedCallback:
 123              	.LVL3:
 124              	.LFB45:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** uint8_t counter = 0;
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** // Currently trigger at 104,8 Hz
 308:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
 309:Core/Src/main.c **** {
 125              		.loc 1 309 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		.loc 1 309 1 is_stmt 0 view .LVU27
 130 0000 10B5     		push	{r4, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
 310:Core/Src/main.c **** 	if(htim == &htim2){
 134              		.loc 1 310 2 is_stmt 1 view .LVU28
 135              		.loc 1 310 4 is_stmt 0 view .LVU29
 136 0002 334B     		ldr	r3, .L16
 137 0004 8342     		cmp	r3, r0
 138 0006 00D0     		beq	.L13
 139              	.LVL4:
 140              	.L4:
 311:Core/Src/main.c **** 		
 312:Core/Src/main.c ****     if(modulator.available){
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****       // Disable timer before start
 315:Core/Src/main.c ****       HAL_TIM_OC_Stop(&htim21,TIM_CHANNEL_2);
 316:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 317:Core/Src/main.c ****       
 318:Core/Src/main.c ****       // Start packet by sending 1
 319:Core/Src/main.c ****       if(counter == 0){ 
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 9


 320:Core/Src/main.c ****         HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 321:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 322:Core/Src/main.c ****         counter++;
 323:Core/Src/main.c ****       }
 324:Core/Src/main.c ****       
 325:Core/Src/main.c ****       else if(counter < 9){
 326:Core/Src/main.c ****         if((modulator.data_byte & 1 << (counter-1))>>(counter-1)){ 	  
 327:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 328:Core/Src/main.c ****           HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 329:Core/Src/main.c ****         }
 330:Core/Src/main.c ****         else{ 																												
 331:Core/Src/main.c ****           HAL_TIM_OC_Stop(&htim21,TIM_CHANNEL_2);
 332:Core/Src/main.c ****           HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 333:Core/Src/main.c ****         }
 334:Core/Src/main.c ****         counter++;
 335:Core/Src/main.c ****       }
 336:Core/Src/main.c ****       
 337:Core/Src/main.c ****       // Stop packet by sending 1
 338:Core/Src/main.c ****       else if(counter == 9){
 339:Core/Src/main.c ****         HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****         counter++;
 342:Core/Src/main.c ****       }
 343:Core/Src/main.c ****       
 344:Core/Src/main.c ****       // Time between two bytes (12-9)*baudrate
 345:Core/Src/main.c ****       else if(counter < 9 + modulator.periods_between_bytes){		  
 346:Core/Src/main.c ****         counter++;		
 347:Core/Src/main.c ****       }
 348:Core/Src/main.c ****       else if(counter == 9 + modulator.periods_between_bytes){		
 349:Core/Src/main.c ****         counter = 0;
 350:Core/Src/main.c ****         modulator.available = 0; // End sending byte
 351:Core/Src/main.c ****       }
 352:Core/Src/main.c ****     }
 353:Core/Src/main.c ****     else{
 354:Core/Src/main.c ****       // Check if new bytes should be transmitted
 355:Core/Src/main.c ****       check_tx_buffer(&modulator);
 356:Core/Src/main.c ****     }
 357:Core/Src/main.c **** 	}
 358:Core/Src/main.c **** }
 141              		.loc 1 358 1 view .LVU30
 142              		@ sp needed
 143 0008 10BD     		pop	{r4, pc}
 144              	.LVL5:
 145              	.L13:
 312:Core/Src/main.c **** 
 146              		.loc 1 312 5 is_stmt 1 view .LVU31
 312:Core/Src/main.c **** 
 147              		.loc 1 312 17 is_stmt 0 view .LVU32
 148 000a 324B     		ldr	r3, .L16+4
 149 000c 9B78     		ldrb	r3, [r3, #2]
 312:Core/Src/main.c **** 
 150              		.loc 1 312 7 view .LVU33
 151 000e 002B     		cmp	r3, #0
 152 0010 5AD0     		beq	.L6
 315:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 153              		.loc 1 315 7 is_stmt 1 view .LVU34
 154 0012 3148     		ldr	r0, .L16+8
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 10


 155              	.LVL6:
 315:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 156              		.loc 1 315 7 is_stmt 0 view .LVU35
 157 0014 0421     		movs	r1, #4
 158 0016 FFF7FEFF 		bl	HAL_TIM_OC_Stop
 159              	.LVL7:
 316:Core/Src/main.c ****       
 160              		.loc 1 316 7 is_stmt 1 view .LVU36
 161 001a 0022     		movs	r2, #0
 162 001c 0221     		movs	r1, #2
 163 001e 2F48     		ldr	r0, .L16+12
 164 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL8:
 319:Core/Src/main.c ****         HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 166              		.loc 1 319 7 view .LVU37
 319:Core/Src/main.c ****         HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 167              		.loc 1 319 18 is_stmt 0 view .LVU38
 168 0024 2E4B     		ldr	r3, .L16+16
 169 0026 1B78     		ldrb	r3, [r3]
 319:Core/Src/main.c ****         HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 170              		.loc 1 319 9 view .LVU39
 171 0028 002B     		cmp	r3, #0
 172 002a 17D0     		beq	.L14
 325:Core/Src/main.c ****         if((modulator.data_byte & 1 << (counter-1))>>(counter-1)){ 	  
 173              		.loc 1 325 12 is_stmt 1 view .LVU40
 325:Core/Src/main.c ****         if((modulator.data_byte & 1 << (counter-1))>>(counter-1)){ 	  
 174              		.loc 1 325 14 is_stmt 0 view .LVU41
 175 002c 082B     		cmp	r3, #8
 176 002e 2DD8     		bhi	.L8
 326:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 177              		.loc 1 326 9 is_stmt 1 view .LVU42
 326:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 178              		.loc 1 326 22 is_stmt 0 view .LVU43
 179 0030 284A     		ldr	r2, .L16+4
 180 0032 1178     		ldrb	r1, [r2]
 326:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 181              		.loc 1 326 48 view .LVU44
 182 0034 013B     		subs	r3, r3, #1
 326:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 183              		.loc 1 326 37 view .LVU45
 184 0036 0122     		movs	r2, #1
 185 0038 9A40     		lsls	r2, r2, r3
 326:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 186              		.loc 1 326 33 view .LVU46
 187 003a 0A40     		ands	r2, r1
 326:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 188              		.loc 1 326 52 view .LVU47
 189 003c 1A41     		asrs	r2, r2, r3
 326:Core/Src/main.c ****           HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 190              		.loc 1 326 11 view .LVU48
 191 003e 1BD0     		beq	.L9
 327:Core/Src/main.c ****           HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 192              		.loc 1 327 11 is_stmt 1 view .LVU49
 193 0040 2548     		ldr	r0, .L16+8
 194 0042 0421     		movs	r1, #4
 195 0044 FFF7FEFF 		bl	HAL_TIM_OC_Start
 196              	.LVL9:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 11


 328:Core/Src/main.c ****         }
 197              		.loc 1 328 11 view .LVU50
 198 0048 0122     		movs	r2, #1
 199 004a 0221     		movs	r1, #2
 200 004c 2348     		ldr	r0, .L16+12
 201 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL10:
 203              	.L10:
 334:Core/Src/main.c ****       }
 204              		.loc 1 334 9 view .LVU51
 334:Core/Src/main.c ****       }
 205              		.loc 1 334 16 is_stmt 0 view .LVU52
 206 0052 234A     		ldr	r2, .L16+16
 207 0054 1378     		ldrb	r3, [r2]
 208 0056 0133     		adds	r3, r3, #1
 209 0058 1370     		strb	r3, [r2]
 210 005a D5E7     		b	.L4
 211              	.L14:
 320:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 212              		.loc 1 320 9 is_stmt 1 view .LVU53
 213 005c 1E48     		ldr	r0, .L16+8
 214 005e 0421     		movs	r1, #4
 215 0060 FFF7FEFF 		bl	HAL_TIM_OC_Start
 216              	.LVL11:
 321:Core/Src/main.c ****         counter++;
 217              		.loc 1 321 9 view .LVU54
 218 0064 0122     		movs	r2, #1
 219 0066 0221     		movs	r1, #2
 220 0068 1C48     		ldr	r0, .L16+12
 221 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 222              	.LVL12:
 322:Core/Src/main.c ****       }
 223              		.loc 1 322 9 view .LVU55
 322:Core/Src/main.c ****       }
 224              		.loc 1 322 16 is_stmt 0 view .LVU56
 225 006e 1C4A     		ldr	r2, .L16+16
 226 0070 1378     		ldrb	r3, [r2]
 227 0072 0133     		adds	r3, r3, #1
 228 0074 1370     		strb	r3, [r2]
 229 0076 C7E7     		b	.L4
 230              	.L9:
 331:Core/Src/main.c ****           HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 231              		.loc 1 331 11 is_stmt 1 view .LVU57
 232 0078 1748     		ldr	r0, .L16+8
 233 007a 0421     		movs	r1, #4
 234 007c FFF7FEFF 		bl	HAL_TIM_OC_Stop
 235              	.LVL13:
 332:Core/Src/main.c ****         }
 236              		.loc 1 332 11 view .LVU58
 237 0080 0022     		movs	r2, #0
 238 0082 0221     		movs	r1, #2
 239 0084 1548     		ldr	r0, .L16+12
 240 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL14:
 242 008a E2E7     		b	.L10
 243              	.L8:
 338:Core/Src/main.c ****         HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 12


 244              		.loc 1 338 12 view .LVU59
 338:Core/Src/main.c ****         HAL_TIM_OC_Start(&htim21,TIM_CHANNEL_2);
 245              		.loc 1 338 14 is_stmt 0 view .LVU60
 246 008c 092B     		cmp	r3, #9
 247 008e 09D0     		beq	.L15
 345:Core/Src/main.c ****         counter++;		
 248              		.loc 1 345 12 is_stmt 1 view .LVU61
 345:Core/Src/main.c ****         counter++;		
 249              		.loc 1 345 38 is_stmt 0 view .LVU62
 250 0090 104A     		ldr	r2, .L16+4
 251 0092 5278     		ldrb	r2, [r2, #1]
 345:Core/Src/main.c ****         counter++;		
 252              		.loc 1 345 23 view .LVU63
 253 0094 1100     		movs	r1, r2
 254 0096 0831     		adds	r1, r1, #8
 345:Core/Src/main.c ****         counter++;		
 255              		.loc 1 345 14 view .LVU64
 256 0098 9942     		cmp	r1, r3
 257 009a 0CDB     		blt	.L12
 346:Core/Src/main.c ****       }
 258              		.loc 1 346 9 is_stmt 1 view .LVU65
 346:Core/Src/main.c ****       }
 259              		.loc 1 346 16 is_stmt 0 view .LVU66
 260 009c 104A     		ldr	r2, .L16+16
 261 009e 0133     		adds	r3, r3, #1
 262 00a0 1370     		strb	r3, [r2]
 263 00a2 B1E7     		b	.L4
 264              	.L15:
 339:Core/Src/main.c **** 
 265              		.loc 1 339 9 is_stmt 1 view .LVU67
 266 00a4 0C48     		ldr	r0, .L16+8
 267 00a6 0421     		movs	r1, #4
 268 00a8 FFF7FEFF 		bl	HAL_TIM_OC_Start
 269              	.LVL15:
 341:Core/Src/main.c ****       }
 270              		.loc 1 341 9 view .LVU68
 341:Core/Src/main.c ****       }
 271              		.loc 1 341 16 is_stmt 0 view .LVU69
 272 00ac 0C4A     		ldr	r2, .L16+16
 273 00ae 1378     		ldrb	r3, [r2]
 274 00b0 0133     		adds	r3, r3, #1
 275 00b2 1370     		strb	r3, [r2]
 276 00b4 A8E7     		b	.L4
 277              	.L12:
 348:Core/Src/main.c ****         counter = 0;
 278              		.loc 1 348 12 is_stmt 1 view .LVU70
 348:Core/Src/main.c ****         counter = 0;
 279              		.loc 1 348 28 is_stmt 0 view .LVU71
 280 00b6 0932     		adds	r2, r2, #9
 348:Core/Src/main.c ****         counter = 0;
 281              		.loc 1 348 14 view .LVU72
 282 00b8 9342     		cmp	r3, r2
 283 00ba A5D1     		bne	.L4
 349:Core/Src/main.c ****         modulator.available = 0; // End sending byte
 284              		.loc 1 349 9 is_stmt 1 view .LVU73
 349:Core/Src/main.c ****         modulator.available = 0; // End sending byte
 285              		.loc 1 349 17 is_stmt 0 view .LVU74
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 13


 286 00bc 084B     		ldr	r3, .L16+16
 287 00be 0022     		movs	r2, #0
 288 00c0 1A70     		strb	r2, [r3]
 350:Core/Src/main.c ****       }
 289              		.loc 1 350 9 is_stmt 1 view .LVU75
 350:Core/Src/main.c ****       }
 290              		.loc 1 350 29 is_stmt 0 view .LVU76
 291 00c2 044B     		ldr	r3, .L16+4
 292 00c4 9A70     		strb	r2, [r3, #2]
 293 00c6 9FE7     		b	.L4
 294              	.LVL16:
 295              	.L6:
 355:Core/Src/main.c ****     }
 296              		.loc 1 355 7 is_stmt 1 view .LVU77
 297 00c8 0248     		ldr	r0, .L16+4
 298              	.LVL17:
 355:Core/Src/main.c ****     }
 299              		.loc 1 355 7 is_stmt 0 view .LVU78
 300 00ca FFF7FEFF 		bl	check_tx_buffer
 301              	.LVL18:
 302              		.loc 1 358 1 view .LVU79
 303 00ce 9BE7     		b	.L4
 304              	.L17:
 305              		.align	2
 306              	.L16:
 307 00d0 00000000 		.word	htim2
 308 00d4 00000000 		.word	modulator
 309 00d8 00000000 		.word	htim21
 310 00dc 00040050 		.word	1342178304
 311 00e0 00000000 		.word	counter
 312              		.cfi_endproc
 313              	.LFE45:
 315              		.section	.text.Error_Handler,"ax",%progbits
 316              		.align	1
 317              		.global	Error_Handler
 318              		.syntax unified
 319              		.code	16
 320              		.thumb_func
 322              	Error_Handler:
 323              	.LFB46:
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** /* USER CODE END 4 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** /**
 363:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 364:Core/Src/main.c ****   * @retval None
 365:Core/Src/main.c ****   */
 366:Core/Src/main.c **** void Error_Handler(void)
 367:Core/Src/main.c **** {
 324              		.loc 1 367 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ Volatile: function does not return.
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 368:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 369:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 14


 370:Core/Src/main.c ****   __disable_irq();
 330              		.loc 1 370 3 view .LVU81
 331              	.LBB6:
 332              	.LBI6:
 333              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 15


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 16


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 334              		.loc 2 140 27 view .LVU82
 335              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 336              		.loc 2 142 3 view .LVU83
 337              		.syntax divided
 338              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 339 0000 72B6     		cpsid i
 340              	@ 0 "" 2
 341              		.thumb
 342              		.syntax unified
 343              	.L19:
 344              	.LBE7:
 345              	.LBE6:
 371:Core/Src/main.c ****   while (1)
 346              		.loc 1 371 3 discriminator 1 view .LVU84
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****   }
 347              		.loc 1 373 3 discriminator 1 view .LVU85
 371:Core/Src/main.c ****   while (1)
 348              		.loc 1 371 9 discriminator 1 view .LVU86
 349 0002 FEE7     		b	.L19
 350              		.cfi_endproc
 351              	.LFE46:
 353              		.section	.text.MX_TIM2_Init,"ax",%progbits
 354              		.align	1
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 17


 355              		.syntax unified
 356              		.code	16
 357              		.thumb_func
 359              	MX_TIM2_Init:
 360              	.LFB42:
 180:Core/Src/main.c **** 
 361              		.loc 1 180 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 24
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 00B5     		push	{lr}
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 14, -4
 368 0002 87B0     		sub	sp, sp, #28
 369              		.cfi_def_cfa_offset 32
 186:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 370              		.loc 1 186 3 view .LVU88
 186:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 371              		.loc 1 186 26 is_stmt 0 view .LVU89
 372 0004 1022     		movs	r2, #16
 373 0006 0021     		movs	r1, #0
 374 0008 02A8     		add	r0, sp, #8
 375 000a FFF7FEFF 		bl	memset
 376              	.LVL19:
 187:Core/Src/main.c **** 
 377              		.loc 1 187 3 is_stmt 1 view .LVU90
 187:Core/Src/main.c **** 
 378              		.loc 1 187 27 is_stmt 0 view .LVU91
 379 000e 0822     		movs	r2, #8
 380 0010 0021     		movs	r1, #0
 381 0012 6846     		mov	r0, sp
 382 0014 FFF7FEFF 		bl	memset
 383              	.LVL20:
 192:Core/Src/main.c ****   htim2.Init.Prescaler = 1;
 384              		.loc 1 192 3 is_stmt 1 view .LVU92
 192:Core/Src/main.c ****   htim2.Init.Prescaler = 1;
 385              		.loc 1 192 18 is_stmt 0 view .LVU93
 386 0018 1448     		ldr	r0, .L27
 387 001a 8023     		movs	r3, #128
 388 001c DB05     		lsls	r3, r3, #23
 389 001e 0360     		str	r3, [r0]
 193:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 390              		.loc 1 193 3 is_stmt 1 view .LVU94
 193:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 391              		.loc 1 193 24 is_stmt 0 view .LVU95
 392 0020 0123     		movs	r3, #1
 393 0022 4360     		str	r3, [r0, #4]
 194:Core/Src/main.c ****   htim2.Init.Period = 511;
 394              		.loc 1 194 3 is_stmt 1 view .LVU96
 194:Core/Src/main.c ****   htim2.Init.Period = 511;
 395              		.loc 1 194 26 is_stmt 0 view .LVU97
 396 0024 0023     		movs	r3, #0
 397 0026 8360     		str	r3, [r0, #8]
 195:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 398              		.loc 1 195 3 is_stmt 1 view .LVU98
 195:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 399              		.loc 1 195 21 is_stmt 0 view .LVU99
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 18


 400 0028 114A     		ldr	r2, .L27+4
 401 002a C260     		str	r2, [r0, #12]
 196:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 402              		.loc 1 196 3 is_stmt 1 view .LVU100
 196:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 403              		.loc 1 196 28 is_stmt 0 view .LVU101
 404 002c 0361     		str	r3, [r0, #16]
 197:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 405              		.loc 1 197 3 is_stmt 1 view .LVU102
 197:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 406              		.loc 1 197 32 is_stmt 0 view .LVU103
 407 002e 4361     		str	r3, [r0, #20]
 198:Core/Src/main.c ****   {
 408              		.loc 1 198 3 is_stmt 1 view .LVU104
 198:Core/Src/main.c ****   {
 409              		.loc 1 198 7 is_stmt 0 view .LVU105
 410 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 411              	.LVL21:
 198:Core/Src/main.c ****   {
 412              		.loc 1 198 6 view .LVU106
 413 0034 0028     		cmp	r0, #0
 414 0036 13D1     		bne	.L24
 202:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 415              		.loc 1 202 3 is_stmt 1 view .LVU107
 202:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 416              		.loc 1 202 34 is_stmt 0 view .LVU108
 417 0038 8023     		movs	r3, #128
 418 003a 5B01     		lsls	r3, r3, #5
 419 003c 0293     		str	r3, [sp, #8]
 203:Core/Src/main.c ****   {
 420              		.loc 1 203 3 is_stmt 1 view .LVU109
 203:Core/Src/main.c ****   {
 421              		.loc 1 203 7 is_stmt 0 view .LVU110
 422 003e 0B48     		ldr	r0, .L27
 423 0040 02A9     		add	r1, sp, #8
 424 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 425              	.LVL22:
 203:Core/Src/main.c ****   {
 426              		.loc 1 203 6 view .LVU111
 427 0046 0028     		cmp	r0, #0
 428 0048 0CD1     		bne	.L25
 207:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 429              		.loc 1 207 3 is_stmt 1 view .LVU112
 207:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 430              		.loc 1 207 37 is_stmt 0 view .LVU113
 431 004a 0023     		movs	r3, #0
 432 004c 0093     		str	r3, [sp]
 208:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 433              		.loc 1 208 3 is_stmt 1 view .LVU114
 208:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 434              		.loc 1 208 33 is_stmt 0 view .LVU115
 435 004e 0193     		str	r3, [sp, #4]
 209:Core/Src/main.c ****   {
 436              		.loc 1 209 3 is_stmt 1 view .LVU116
 209:Core/Src/main.c ****   {
 437              		.loc 1 209 7 is_stmt 0 view .LVU117
 438 0050 0648     		ldr	r0, .L27
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 19


 439 0052 6946     		mov	r1, sp
 440 0054 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 441              	.LVL23:
 209:Core/Src/main.c ****   {
 442              		.loc 1 209 6 view .LVU118
 443 0058 0028     		cmp	r0, #0
 444 005a 05D1     		bne	.L26
 217:Core/Src/main.c **** 
 445              		.loc 1 217 1 view .LVU119
 446 005c 07B0     		add	sp, sp, #28
 447              		@ sp needed
 448 005e 00BD     		pop	{pc}
 449              	.L24:
 200:Core/Src/main.c ****   }
 450              		.loc 1 200 5 is_stmt 1 view .LVU120
 451 0060 FFF7FEFF 		bl	Error_Handler
 452              	.LVL24:
 453              	.L25:
 205:Core/Src/main.c ****   }
 454              		.loc 1 205 5 view .LVU121
 455 0064 FFF7FEFF 		bl	Error_Handler
 456              	.LVL25:
 457              	.L26:
 211:Core/Src/main.c ****   }
 458              		.loc 1 211 5 view .LVU122
 459 0068 FFF7FEFF 		bl	Error_Handler
 460              	.LVL26:
 461              	.L28:
 462              		.align	2
 463              	.L27:
 464 006c 00000000 		.word	htim2
 465 0070 FF010000 		.word	511
 466              		.cfi_endproc
 467              	.LFE42:
 469              		.section	.text.MX_TIM21_Init,"ax",%progbits
 470              		.align	1
 471              		.syntax unified
 472              		.code	16
 473              		.thumb_func
 475              	MX_TIM21_Init:
 476              	.LFB43:
 225:Core/Src/main.c **** 
 477              		.loc 1 225 1 view -0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 40
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481 0000 00B5     		push	{lr}
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 14, -4
 484 0002 8BB0     		sub	sp, sp, #44
 485              		.cfi_def_cfa_offset 48
 231:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 486              		.loc 1 231 3 view .LVU124
 231:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 487              		.loc 1 231 26 is_stmt 0 view .LVU125
 488 0004 1022     		movs	r2, #16
 489 0006 0021     		movs	r1, #0
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 20


 490 0008 06A8     		add	r0, sp, #24
 491 000a FFF7FEFF 		bl	memset
 492              	.LVL27:
 232:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 493              		.loc 1 232 3 is_stmt 1 view .LVU126
 232:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 494              		.loc 1 232 27 is_stmt 0 view .LVU127
 495 000e 0822     		movs	r2, #8
 496 0010 0021     		movs	r1, #0
 497 0012 04A8     		add	r0, sp, #16
 498 0014 FFF7FEFF 		bl	memset
 499              	.LVL28:
 233:Core/Src/main.c **** 
 500              		.loc 1 233 3 is_stmt 1 view .LVU128
 233:Core/Src/main.c **** 
 501              		.loc 1 233 22 is_stmt 0 view .LVU129
 502 0018 1022     		movs	r2, #16
 503 001a 0021     		movs	r1, #0
 504 001c 6846     		mov	r0, sp
 505 001e FFF7FEFF 		bl	memset
 506              	.LVL29:
 238:Core/Src/main.c ****   htim21.Init.Prescaler = 0;
 507              		.loc 1 238 3 is_stmt 1 view .LVU130
 238:Core/Src/main.c ****   htim21.Init.Prescaler = 0;
 508              		.loc 1 238 19 is_stmt 0 view .LVU131
 509 0022 2148     		ldr	r0, .L40
 510 0024 214B     		ldr	r3, .L40+4
 511 0026 0360     		str	r3, [r0]
 239:Core/Src/main.c ****   htim21.Init.CounterMode = TIM_COUNTERMODE_UP;
 512              		.loc 1 239 3 is_stmt 1 view .LVU132
 239:Core/Src/main.c ****   htim21.Init.CounterMode = TIM_COUNTERMODE_UP;
 513              		.loc 1 239 25 is_stmt 0 view .LVU133
 514 0028 0023     		movs	r3, #0
 515 002a 4360     		str	r3, [r0, #4]
 240:Core/Src/main.c ****   htim21.Init.Period = 1;
 516              		.loc 1 240 3 is_stmt 1 view .LVU134
 240:Core/Src/main.c ****   htim21.Init.Period = 1;
 517              		.loc 1 240 27 is_stmt 0 view .LVU135
 518 002c 8360     		str	r3, [r0, #8]
 241:Core/Src/main.c ****   htim21.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 519              		.loc 1 241 3 is_stmt 1 view .LVU136
 241:Core/Src/main.c ****   htim21.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 520              		.loc 1 241 22 is_stmt 0 view .LVU137
 521 002e 0122     		movs	r2, #1
 522 0030 C260     		str	r2, [r0, #12]
 242:Core/Src/main.c ****   htim21.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 523              		.loc 1 242 3 is_stmt 1 view .LVU138
 242:Core/Src/main.c ****   htim21.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 524              		.loc 1 242 29 is_stmt 0 view .LVU139
 525 0032 0361     		str	r3, [r0, #16]
 243:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim21) != HAL_OK)
 526              		.loc 1 243 3 is_stmt 1 view .LVU140
 243:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim21) != HAL_OK)
 527              		.loc 1 243 33 is_stmt 0 view .LVU141
 528 0034 4361     		str	r3, [r0, #20]
 244:Core/Src/main.c ****   {
 529              		.loc 1 244 3 is_stmt 1 view .LVU142
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 21


 244:Core/Src/main.c ****   {
 530              		.loc 1 244 7 is_stmt 0 view .LVU143
 531 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 532              	.LVL30:
 244:Core/Src/main.c ****   {
 533              		.loc 1 244 6 view .LVU144
 534 003a 0028     		cmp	r0, #0
 535 003c 29D1     		bne	.L35
 248:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim21, &sClockSourceConfig) != HAL_OK)
 536              		.loc 1 248 3 is_stmt 1 view .LVU145
 248:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim21, &sClockSourceConfig) != HAL_OK)
 537              		.loc 1 248 34 is_stmt 0 view .LVU146
 538 003e 8023     		movs	r3, #128
 539 0040 5B01     		lsls	r3, r3, #5
 540 0042 0693     		str	r3, [sp, #24]
 249:Core/Src/main.c ****   {
 541              		.loc 1 249 3 is_stmt 1 view .LVU147
 249:Core/Src/main.c ****   {
 542              		.loc 1 249 7 is_stmt 0 view .LVU148
 543 0044 1848     		ldr	r0, .L40
 544 0046 06A9     		add	r1, sp, #24
 545 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 546              	.LVL31:
 249:Core/Src/main.c ****   {
 547              		.loc 1 249 6 view .LVU149
 548 004c 0028     		cmp	r0, #0
 549 004e 22D1     		bne	.L36
 253:Core/Src/main.c ****   {
 550              		.loc 1 253 3 is_stmt 1 view .LVU150
 253:Core/Src/main.c ****   {
 551              		.loc 1 253 7 is_stmt 0 view .LVU151
 552 0050 1548     		ldr	r0, .L40
 553 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 554              	.LVL32:
 253:Core/Src/main.c ****   {
 555              		.loc 1 253 6 view .LVU152
 556 0056 0028     		cmp	r0, #0
 557 0058 1FD1     		bne	.L37
 257:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 558              		.loc 1 257 3 is_stmt 1 view .LVU153
 257:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 559              		.loc 1 257 37 is_stmt 0 view .LVU154
 560 005a 0023     		movs	r3, #0
 561 005c 0493     		str	r3, [sp, #16]
 258:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim21, &sMasterConfig) != HAL_OK)
 562              		.loc 1 258 3 is_stmt 1 view .LVU155
 258:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim21, &sMasterConfig) != HAL_OK)
 563              		.loc 1 258 33 is_stmt 0 view .LVU156
 564 005e 0593     		str	r3, [sp, #20]
 259:Core/Src/main.c ****   {
 565              		.loc 1 259 3 is_stmt 1 view .LVU157
 259:Core/Src/main.c ****   {
 566              		.loc 1 259 7 is_stmt 0 view .LVU158
 567 0060 1148     		ldr	r0, .L40
 568 0062 04A9     		add	r1, sp, #16
 569 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 570              	.LVL33:
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 22


 259:Core/Src/main.c ****   {
 571              		.loc 1 259 6 view .LVU159
 572 0068 0028     		cmp	r0, #0
 573 006a 18D1     		bne	.L38
 263:Core/Src/main.c ****   sConfigOC.Pulse = 1;
 574              		.loc 1 263 3 is_stmt 1 view .LVU160
 263:Core/Src/main.c ****   sConfigOC.Pulse = 1;
 575              		.loc 1 263 20 is_stmt 0 view .LVU161
 576 006c 7023     		movs	r3, #112
 577 006e 0093     		str	r3, [sp]
 264:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 578              		.loc 1 264 3 is_stmt 1 view .LVU162
 264:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 579              		.loc 1 264 19 is_stmt 0 view .LVU163
 580 0070 6F3B     		subs	r3, r3, #111
 581 0072 0193     		str	r3, [sp, #4]
 265:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 582              		.loc 1 265 3 is_stmt 1 view .LVU164
 265:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 583              		.loc 1 265 24 is_stmt 0 view .LVU165
 584 0074 0023     		movs	r3, #0
 585 0076 0293     		str	r3, [sp, #8]
 266:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim21, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 586              		.loc 1 266 3 is_stmt 1 view .LVU166
 266:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim21, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 587              		.loc 1 266 24 is_stmt 0 view .LVU167
 588 0078 0393     		str	r3, [sp, #12]
 267:Core/Src/main.c ****   {
 589              		.loc 1 267 3 is_stmt 1 view .LVU168
 267:Core/Src/main.c ****   {
 590              		.loc 1 267 7 is_stmt 0 view .LVU169
 591 007a 0B48     		ldr	r0, .L40
 592 007c 0422     		movs	r2, #4
 593 007e 6946     		mov	r1, sp
 594 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 595              	.LVL34:
 267:Core/Src/main.c ****   {
 596              		.loc 1 267 6 view .LVU170
 597 0084 0028     		cmp	r0, #0
 598 0086 0CD1     		bne	.L39
 274:Core/Src/main.c **** 
 599              		.loc 1 274 3 is_stmt 1 view .LVU171
 600 0088 0748     		ldr	r0, .L40
 601 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 602              	.LVL35:
 276:Core/Src/main.c **** 
 603              		.loc 1 276 1 is_stmt 0 view .LVU172
 604 008e 0BB0     		add	sp, sp, #44
 605              		@ sp needed
 606 0090 00BD     		pop	{pc}
 607              	.L35:
 246:Core/Src/main.c ****   }
 608              		.loc 1 246 5 is_stmt 1 view .LVU173
 609 0092 FFF7FEFF 		bl	Error_Handler
 610              	.LVL36:
 611              	.L36:
 251:Core/Src/main.c ****   }
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 23


 612              		.loc 1 251 5 view .LVU174
 613 0096 FFF7FEFF 		bl	Error_Handler
 614              	.LVL37:
 615              	.L37:
 255:Core/Src/main.c ****   }
 616              		.loc 1 255 5 view .LVU175
 617 009a FFF7FEFF 		bl	Error_Handler
 618              	.LVL38:
 619              	.L38:
 261:Core/Src/main.c ****   }
 620              		.loc 1 261 5 view .LVU176
 621 009e FFF7FEFF 		bl	Error_Handler
 622              	.LVL39:
 623              	.L39:
 269:Core/Src/main.c ****   }
 624              		.loc 1 269 5 view .LVU177
 625 00a2 FFF7FEFF 		bl	Error_Handler
 626              	.LVL40:
 627              	.L41:
 628 00a6 C046     		.align	2
 629              	.L40:
 630 00a8 00000000 		.word	htim21
 631 00ac 00080140 		.word	1073809408
 632              		.cfi_endproc
 633              	.LFE43:
 635              		.section	.text.SystemClock_Config,"ax",%progbits
 636              		.align	1
 637              		.global	SystemClock_Config
 638              		.syntax unified
 639              		.code	16
 640              		.thumb_func
 642              	SystemClock_Config:
 643              	.LFB41:
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 644              		.loc 1 140 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 72
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648 0000 00B5     		push	{lr}
 649              		.cfi_def_cfa_offset 4
 650              		.cfi_offset 14, -4
 651 0002 93B0     		sub	sp, sp, #76
 652              		.cfi_def_cfa_offset 80
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 653              		.loc 1 141 3 view .LVU179
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 654              		.loc 1 141 22 is_stmt 0 view .LVU180
 655 0004 3422     		movs	r2, #52
 656 0006 0021     		movs	r1, #0
 657 0008 05A8     		add	r0, sp, #20
 658 000a FFF7FEFF 		bl	memset
 659              	.LVL41:
 142:Core/Src/main.c **** 
 660              		.loc 1 142 3 is_stmt 1 view .LVU181
 142:Core/Src/main.c **** 
 661              		.loc 1 142 22 is_stmt 0 view .LVU182
 662 000e 1422     		movs	r2, #20
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 24


 663 0010 0021     		movs	r1, #0
 664 0012 6846     		mov	r0, sp
 665 0014 FFF7FEFF 		bl	memset
 666              	.LVL42:
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 667              		.loc 1 146 3 is_stmt 1 view .LVU183
 668 0018 1449     		ldr	r1, .L47
 669 001a 0A68     		ldr	r2, [r1]
 670 001c 144B     		ldr	r3, .L47+4
 671 001e 1A40     		ands	r2, r3
 672 0020 8023     		movs	r3, #128
 673 0022 1B01     		lsls	r3, r3, #4
 674 0024 1343     		orrs	r3, r2
 675 0026 0B60     		str	r3, [r1]
 150:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 676              		.loc 1 150 3 view .LVU184
 150:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 677              		.loc 1 150 36 is_stmt 0 view .LVU185
 678 0028 1023     		movs	r3, #16
 679 002a 0593     		str	r3, [sp, #20]
 151:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 680              		.loc 1 151 3 is_stmt 1 view .LVU186
 151:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 681              		.loc 1 151 30 is_stmt 0 view .LVU187
 682 002c 0F3B     		subs	r3, r3, #15
 683 002e 0B93     		str	r3, [sp, #44]
 152:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_4;
 684              		.loc 1 152 3 is_stmt 1 view .LVU188
 152:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_4;
 685              		.loc 1 152 41 is_stmt 0 view .LVU189
 686 0030 0023     		movs	r3, #0
 687 0032 0C93     		str	r3, [sp, #48]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 688              		.loc 1 153 3 is_stmt 1 view .LVU190
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 689              		.loc 1 153 35 is_stmt 0 view .LVU191
 690 0034 8022     		movs	r2, #128
 691 0036 1202     		lsls	r2, r2, #8
 692 0038 0D92     		str	r2, [sp, #52]
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 693              		.loc 1 154 3 is_stmt 1 view .LVU192
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 694              		.loc 1 154 34 is_stmt 0 view .LVU193
 695 003a 0E93     		str	r3, [sp, #56]
 155:Core/Src/main.c ****   {
 696              		.loc 1 155 3 is_stmt 1 view .LVU194
 155:Core/Src/main.c ****   {
 697              		.loc 1 155 7 is_stmt 0 view .LVU195
 698 003c 05A8     		add	r0, sp, #20
 699 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 700              	.LVL43:
 155:Core/Src/main.c ****   {
 701              		.loc 1 155 6 view .LVU196
 702 0042 0028     		cmp	r0, #0
 703 0044 0ED1     		bne	.L45
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 704              		.loc 1 161 3 is_stmt 1 view .LVU197
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 25


 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 705              		.loc 1 161 31 is_stmt 0 view .LVU198
 706 0046 0F23     		movs	r3, #15
 707 0048 0093     		str	r3, [sp]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 708              		.loc 1 163 3 is_stmt 1 view .LVU199
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 709              		.loc 1 163 34 is_stmt 0 view .LVU200
 710 004a 0023     		movs	r3, #0
 711 004c 0193     		str	r3, [sp, #4]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 712              		.loc 1 164 3 is_stmt 1 view .LVU201
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 713              		.loc 1 164 35 is_stmt 0 view .LVU202
 714 004e 0293     		str	r3, [sp, #8]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 715              		.loc 1 165 3 is_stmt 1 view .LVU203
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 716              		.loc 1 165 36 is_stmt 0 view .LVU204
 717 0050 0393     		str	r3, [sp, #12]
 166:Core/Src/main.c **** 
 718              		.loc 1 166 3 is_stmt 1 view .LVU205
 166:Core/Src/main.c **** 
 719              		.loc 1 166 36 is_stmt 0 view .LVU206
 720 0052 0493     		str	r3, [sp, #16]
 168:Core/Src/main.c ****   {
 721              		.loc 1 168 3 is_stmt 1 view .LVU207
 168:Core/Src/main.c ****   {
 722              		.loc 1 168 7 is_stmt 0 view .LVU208
 723 0054 0021     		movs	r1, #0
 724 0056 6846     		mov	r0, sp
 725 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 726              	.LVL44:
 168:Core/Src/main.c ****   {
 727              		.loc 1 168 6 view .LVU209
 728 005c 0028     		cmp	r0, #0
 729 005e 03D1     		bne	.L46
 172:Core/Src/main.c **** 
 730              		.loc 1 172 1 view .LVU210
 731 0060 13B0     		add	sp, sp, #76
 732              		@ sp needed
 733 0062 00BD     		pop	{pc}
 734              	.L45:
 157:Core/Src/main.c ****   }
 735              		.loc 1 157 5 is_stmt 1 view .LVU211
 736 0064 FFF7FEFF 		bl	Error_Handler
 737              	.LVL45:
 738              	.L46:
 170:Core/Src/main.c ****   }
 739              		.loc 1 170 5 view .LVU212
 740 0068 FFF7FEFF 		bl	Error_Handler
 741              	.LVL46:
 742              	.L48:
 743              		.align	2
 744              	.L47:
 745 006c 00700040 		.word	1073770496
 746 0070 FFE7FFFF 		.word	-6145
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 26


 747              		.cfi_endproc
 748              	.LFE41:
 750              		.section	.text.main,"ax",%progbits
 751              		.align	1
 752              		.global	main
 753              		.syntax unified
 754              		.code	16
 755              		.thumb_func
 757              	main:
 758              	.LFB40:
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 759              		.loc 1 74 1 view -0
 760              		.cfi_startproc
 761              		@ Volatile: function does not return.
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764 0000 10B5     		push	{r4, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 4, -8
 767              		.cfi_offset 14, -4
  82:Core/Src/main.c **** 
 768              		.loc 1 82 3 view .LVU214
 769 0002 FFF7FEFF 		bl	HAL_Init
 770              	.LVL47:
  89:Core/Src/main.c **** 
 771              		.loc 1 89 3 view .LVU215
 772 0006 FFF7FEFF 		bl	SystemClock_Config
 773              	.LVL48:
  96:Core/Src/main.c ****   MX_TIM2_Init();
 774              		.loc 1 96 3 view .LVU216
 775 000a FFF7FEFF 		bl	MX_GPIO_Init
 776              	.LVL49:
  97:Core/Src/main.c ****   MX_TIM21_Init();
 777              		.loc 1 97 3 view .LVU217
 778 000e FFF7FEFF 		bl	MX_TIM2_Init
 779              	.LVL50:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 780              		.loc 1 98 3 view .LVU218
 781 0012 FFF7FEFF 		bl	MX_TIM21_Init
 782              	.LVL51:
 101:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim2);
 783              		.loc 1 101 2 view .LVU219
 784 0016 0D48     		ldr	r0, .L51
 785 0018 0421     		movs	r1, #4
 786 001a FFF7FEFF 		bl	HAL_TIM_OC_Start
 787              	.LVL52:
 102:Core/Src/main.c **** 
 788              		.loc 1 102 2 view .LVU220
 789 001e 0C48     		ldr	r0, .L51+4
 790 0020 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 791              	.LVL53:
 105:Core/Src/main.c **** 	
 792              		.loc 1 105 3 view .LVU221
 793 0024 FFF7FEFF 		bl	init
 794              	.LVL54:
 108:Core/Src/main.c **** 	modulator.periods_between_bytes = 5;
 795              		.loc 1 108 2 view .LVU222
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 27


 108:Core/Src/main.c **** 	modulator.periods_between_bytes = 5;
 796              		.loc 1 108 22 is_stmt 0 view .LVU223
 797 0028 0A4B     		ldr	r3, .L51+8
 798 002a 0B22     		movs	r2, #11
 799 002c 1A70     		strb	r2, [r3]
 109:Core/Src/main.c **** 
 800              		.loc 1 109 2 is_stmt 1 view .LVU224
 109:Core/Src/main.c **** 
 801              		.loc 1 109 34 is_stmt 0 view .LVU225
 802 002e 063A     		subs	r2, r2, #6
 803 0030 5A70     		strb	r2, [r3, #1]
 804              	.L50:
 117:Core/Src/main.c ****   {
 805              		.loc 1 117 3 is_stmt 1 discriminator 1 view .LVU226
 123:Core/Src/main.c ****     tx_byte(0x77);
 806              		.loc 1 123 5 discriminator 1 view .LVU227
 807 0032 5520     		movs	r0, #85
 808 0034 FFF7FEFF 		bl	tx_byte
 809              	.LVL55:
 124:Core/Src/main.c ****     tx_byte(0x00);
 810              		.loc 1 124 5 discriminator 1 view .LVU228
 811 0038 7720     		movs	r0, #119
 812 003a FFF7FEFF 		bl	tx_byte
 813              	.LVL56:
 125:Core/Src/main.c ****     HAL_Delay(50);
 814              		.loc 1 125 5 discriminator 1 view .LVU229
 815 003e 0020     		movs	r0, #0
 816 0040 FFF7FEFF 		bl	tx_byte
 817              	.LVL57:
 126:Core/Src/main.c **** 
 818              		.loc 1 126 5 discriminator 1 view .LVU230
 819 0044 3220     		movs	r0, #50
 820 0046 FFF7FEFF 		bl	HAL_Delay
 821              	.LVL58:
 117:Core/Src/main.c ****   {
 822              		.loc 1 117 9 discriminator 1 view .LVU231
 823 004a F2E7     		b	.L50
 824              	.L52:
 825              		.align	2
 826              	.L51:
 827 004c 00000000 		.word	htim21
 828 0050 00000000 		.word	htim2
 829 0054 00000000 		.word	modulator
 830              		.cfi_endproc
 831              	.LFE40:
 833              		.global	counter
 834              		.section	.bss.counter,"aw",%nobits
 837              	counter:
 838 0000 00       		.space	1
 839              		.global	modulator
 840              		.section	.bss.modulator,"aw",%nobits
 841              		.align	2
 844              	modulator:
 845 0000 000000   		.space	3
 846              		.global	htim21
 847              		.section	.bss.htim21,"aw",%nobits
 848              		.align	2
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 28


 851              	htim21:
 852 0000 00000000 		.space	64
 852      00000000 
 852      00000000 
 852      00000000 
 852      00000000 
 853              		.global	htim2
 854              		.section	.bss.htim2,"aw",%nobits
 855              		.align	2
 858              	htim2:
 859 0000 00000000 		.space	64
 859      00000000 
 859      00000000 
 859      00000000 
 859      00000000 
 860              		.text
 861              	.Letext0:
 862              		.file 3 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 863              		.file 4 "c:\\users\\jarne\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 864              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 865              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 866              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 867              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 868              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 869              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 870              		.file 11 "Core/Inc/modulator.h"
 871              		.file 12 "Core/Inc/main.h"
 872              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim_ex.h"
 873              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 874              		.file 15 "<built-in>"
ARM GAS  C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:19     .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:110    .text.MX_GPIO_Init:0000000000000054 $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:116    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:122    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:307    .text.HAL_TIM_PeriodElapsedCallback:00000000000000d0 $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:858    .bss.htim2:0000000000000000 htim2
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:844    .bss.modulator:0000000000000000 modulator
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:851    .bss.htim21:0000000000000000 htim21
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:837    .bss.counter:0000000000000000 counter
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:316    .text.Error_Handler:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:322    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:354    .text.MX_TIM2_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:359    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:464    .text.MX_TIM2_Init:000000000000006c $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:470    .text.MX_TIM21_Init:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:475    .text.MX_TIM21_Init:0000000000000000 MX_TIM21_Init
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:630    .text.MX_TIM21_Init:00000000000000a8 $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:636    .text.SystemClock_Config:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:642    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:745    .text.SystemClock_Config:000000000000006c $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:751    .text.main:0000000000000000 $t
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:757    .text.main:0000000000000000 main
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:827    .text.main:000000000000004c $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:838    .bss.counter:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:841    .bss.modulator:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:848    .bss.htim21:0000000000000000 $d
C:\Users\jarne\AppData\Local\Temp\cc8WFWfa.s:855    .bss.htim2:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_OC_Stop
HAL_TIM_OC_Start
check_tx_buffer
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
init
tx_byte
HAL_Delay
